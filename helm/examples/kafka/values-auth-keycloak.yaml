amqStreams:
  kafka:
    name: amq
    version: 3.1.0
    replicas: 3
    listeners:
      - name: tls
        port: 9093
        type: internal
        tls: true
        authentication:
          type: oauth
          validIssuerUri: https://${SSO_HOST}/auth/realms/kafka-authz
          jwksEndpointUri: https://${SSO_HOST}/auth/realms/kafka-authz/protocol/openid-connect/certs
          userNameClaim: preferred_username
          maxSecondsWithoutReauthentication: 3600
          tlsTrustedCertificates:
            - secretName: oauth-server-cert
              certificate: sso.crt
    authorization:
      type: keycloak
      clientId: kafka
      tokenEndpointUri: https://${SSO_HOST}/auth/realms/kafka-authz/protocol/openid-connect/token
      tlsTrustedCertificates:
        - secretName: oauth-server-cert
          certificate: sso.crt
      delegateToKafkaAcls: true
      superUsers:
        - User:service-account-kafka
    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      default.replication.factor: 3
      min.insync.replicas: 2
      inter.broker.protocol.version: "3.1"
    storage:
      type: jbod
      volumes:
      - id: 0
        type: persistent-claim
        size: 10Gi
        deleteClaim: false
  zookeeper:
    replicas: 3
    storage:
      type: persistent-claim
      size: 10Gi
      deleteClaim: false
  topics:
    # - name: marvel
    #   partitions: 10
    #   replicas: 1
  users:
    # - name: admin