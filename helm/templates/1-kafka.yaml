---
kind: Kafka
apiVersion: kafka.strimzi.io/v1beta2
metadata:
  name: {{ .Values.amqStreams.kafka.name }}
spec:
  kafka:
    version: {{ .Values.amqStreams.kafka.version | default "3.0.0" }}
    replicas: {{ .Values.amqStreams.kafka.replicas | default "3" }}
    listeners:
      {{- toYaml .Values.amqStreams.kafka.listeners | nindent 6 }}
{{- if .Values.amqStreams.kafka.authorization }}
    authorization:
      {{- toYaml .Values.amqStreams.kafka.authorization | nindent 6 }}
{{- end }}
{{- if .Values.amqStreams.kafka.config }}
    config:
      {{- toYaml .Values.amqStreams.kafka.config | nindent 6 }}
{{- end }}
{{- if .Values.amqStreams.kafka.resources }}
    resources:
      {{- toYaml .Values.amqStreams.kafka.resources | nindent 6 }}
{{- else }}
    resources: 
      requests:
        memory: 2Gi
        cpu:  1
      limits:
        memory: 4Gi
        cpu: 2
{{- end }}
{{- if .Values.amqStreams.kafka.jvmOptions }}
    jvmOptions:
      {{- toYaml .Values.amqStreams.kafka.jvmOptions | nindent 6 }}
{{- else }}
    jvmOptions: 
      -Xms: 2048
      -Xmx: 2048
{{- end }}
{{- if .Values.amqStreams.kafka.logging }}
    logging:
      {{- toYaml .Values.amqStreams.kafka.logging | nindent 6 }}
{{- else }}
    logging:
      type: inline
      loggers:
        log4j.logger.io.strimzi: "INFO"
        log4j.logger.kafka: "INFO"
        log4j.logger.org.apache.kafka: "INFO"
{{- end }}
{{- if .Values.amqStreams.kafka.readinessProbe }}
    readinessProbe:
      {{- toYaml .Values.amqStreams.kafka.readinessProbe | nindent 6 }}
{{- end }}
{{- if .Values.amqStreams.kafka.livenessProbe }}
    livenessProbe:
      {{- toYaml .Values.amqStreams.kafka.livenessProbe | nindent 6 }}
{{- end }}
{{- if .Values.amqStreams.kafka.storage }}
    storage:
      {{- toYaml .Values.amqStreams.kafka.storage | nindent 6 }}
{{- end }}
{{- if .Values.amqStreams.kafka.metricsConfig }}
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: kafka-metrics-config.yml
{{- end }}
  zookeeper:
    replicas: {{ .Values.amqStreams.zookeeper.replicas | default "3" }}
{{- if .Values.amqStreams.zookeeper.resources }}
    resources:
      {{- toYaml .Values.amqStreams.zookeeper.resources | nindent 6 }}
{{- else }}
    resources: 
      requests:
        memory: '1Gi'
        cpu:  '500m'
      limits:
        memory: '2Gi'
        cpu: 1
{{- end }}
{{- if .Values.amqStreams.zookeeper.jvmOptions }}
    jvmOptions:
      {{- toYaml .Values.amqStreams.zookeeper.jvmOptions | nindent 6 }}
{{- else }}
    jvmOptions: 
      -Xms: 1024
      -Xmx: 1024
{{- end }}
{{- if .Values.amqStreams.zookeeper.readinessProbe }}
    readinessProbe:
      {{- toYaml .Values.amqStreams.zookeeper.readinessProbe | nindent 6 }}
{{- end }}
{{- if .Values.amqStreams.zookeeper.livenessProbe }}
    livenessProbe:
      {{- toYaml .Values.amqStreams.zookeeper.livenessProbe | nindent 6 }}
{{- end }}
{{- if .Values.amqStreams.zookeeper.storage }}
    storage:
      {{- toYaml .Values.amqStreams.zookeeper.storage | nindent 6 }}
{{- end }}
{{- if .Values.amqStreams.zookeeper.metricsConfig }}
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: zookeeper-metrics-config.yml
{{- end }}
  entityOperator:
    topicOperator: {}
    userOperator: {}
{{- if and .Values.amqStreams.zookeeper.metricsConfig }}
{{- if and .Values.amqStreams.kafkaExporter }}
  kafkaExporter:
    topicRegex: {{ .Values.amqStreams.kafkaExporter.topicRegex | default ".*" }}
    groupRegex: {{ .Values.amqStreams.kafkaExporter.groupRegex | default ".*" }}
{{- else }}
  kafkaExporter:
    topicRegex: ".*"
    groupRegex: ".*"
{{- end }}
{{- end }}